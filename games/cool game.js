

const player = "p";
const grass = "g";
const goal = "o";
const grass2 = "l";
const obstacle = "w";
const obstacle2 = "s";
const obstacle3 = "d";
const obstacle4 = "a";
const obstacle5 = "b";
const obstacle6 = "k";
const obstacle7 = "u";
const obstacle8 = "j";
const obstacle9= "i";

const myTune = tune`
500: G4~500,
15500`;

setLegend(
  [player, bitmap`
................
................
......4.4.......
.......4........
......555.......
.....5...5......
.....50.05......
.....5...5......
......555.......
.......5........
.....55555......
.......5........
.......5........
.......5........
......5.5.......
................` ],
  [grass,  bitmap`
................
................
................
................
................
................
................
................
................
................
................
................
................
................
4444444444444444
4444444444444444`],
  [goal, bitmap`
................
................
................
................
................
................
................
.......3........
......363.......
.......3........
......040.......
.....0C4C0......
.....0CCC0......
.....00000......
4444444444444444
4444444444444444`],
  [grass2,  bitmap`
4444444444444444
4444444444444444
................
................
................
................
................
................
................
................
................
................
................
................
................
................`],
  [obstacle,  bitmap`
4444444444444444
4444444444444444
.......44.......
.......44.......
.......44.......
......444.......
......44444.....
.....444..444...
.....4..4...4...
....44..4...44..
....44..4....4..
.....3...4...45.
....363..4...565
.....3...44...5.
..........4.....
................`],
  [obstacle2,  bitmap`
.......44.......
.......44.......
...444.44.......
.....4.44.......
.....4444.......
......444.......
.......44..44...
.......44.44....
.......444......
.......444......
.......444......
.......44.......
.......44.......
.......44.......
4444444444444444
4444444444444444`],
  [obstacle3,  bitmap`
................
............H...
...7......4H6H..
..767...444.H...
...7....4.......
..4....4........
...4...4........
...44..4...44...
....44.4..74....
......44.767....
.......4.47.....
.......444......
.......44.......
.......44.......
.......44.......
.......44.......`],
  [obstacle4,  bitmap`
4444444444444444
4444444444444444
.......44.......
.......44.......
.......44.......
......444.......
......444.......
.....4444.......
....44.44.......
....44.44.......
...44..44.......
...4...44.......
.......44.......
.......44.......
.......44.......
.......44.......`],
  [obstacle5,  bitmap`
.......44.......
.......44.......
.......44.......
.......44.......
.......44.......
.......44.......
.......444......
.......4.44.....
.......4..4.....
.......4..44....
.....444...4....
....44.....5....
...34.....565...
..363......5....
...3............
................`],
  [obstacle6,  bitmap`
................
............H...
...7......4H6H..
..767...444.H...
...7....4.......
..4....4........
...4...4........
...44..4...44...
....44.4..74....
......44.767....
.......4.47.....
.......444......
.......44.......
.......44.......
4444444444444444
4444444444444444`],
  [obstacle7,  bitmap`
.......44.......
.......44.......
.......44.......
.......44...4...
.......44.444...
.......44.4.....
.......444......
.......444......
.......44.......
.......44.......
.......44.......
.......44.......
.......44.......
.......44.......
4444444444444444
4444444444444444`],
  [obstacle8,  bitmap`
.......44.......
.......44.......
.......44....4..
.......44...4...
.......44.44....
.......44.4.....
.......4444.....
.......444......
.444...44.......
...444.44.......
.....4444.......
......444.......
.......44.......
.......44.......
.......44.......
.......44.......`],
  [obstacle9,  bitmap`
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444
4444444444444444`],
  
);

setSolids([player,obstacle,obstacle2,obstacle3,obstacle4,obstacle5,
obstacle6,obstacle7,obstacle8,obstacle9]);

let level = 0
const levels = [
  map`
lalll
pj.d.
.b.j.
gggso`,
  map`
lwlalll
...b.d.
pd...j.
gsgkguo`,
  map`
alalllal
j.b.d.jp
b...j.b.
ogkgsggg`,
  map`
lalwlalll
pj...j.d.
.b...b.j.
gggkgggso`,
  map`
p.......
wlwlala.
...oj.b.
.iiib...
..i...d.
d...d.j.
ugkgsgug`,
  map`
wllllallwlllw
.....j....d..
iii..j....j..
.pi..jii.ii..
.ii..j.ioi...
.....b.iii...
.............
kgggkggggggkg`,
  map`
iwllllllllllllwll
i.........ii.....
i.iiiiiii.i......
i.i.....i.iiiiii.
i.iii...i..i.....
i.i.i.i.i..i.iiii
i.i.idi.i..i.i.d.
i...iii.i..i.iiii
i.i.....i..i.....
i.i.i.iii..iiii..
i.i.iiibi...b.ii.
i.i.....i......i.
i.iiii..i.d...ii.
i....i..iiii..i..
i.d..i.iiipi.di..
igsggggggggiguigo`     
              
]

const currentLevel = levels[level];
setMap(currentLevel);


setPushables({
  [ player ]: []
})

onInput("s", () => {
  getFirst(player).y += 1
  playTune(myTune)
})
onInput("w", () => {
  getFirst(player).y -= 1
  playTune(myTune)
})
onInput("a", () => {
  getFirst(player).x -= 1
  playTune(myTune)
})
onInput("d", () => {
  getFirst(player).x += 1
  playTune(myTune)
})
afterInput(() => {
  
})

afterInput(() => {
  
  const targetNumber = tilesWith(goal).length;
  
  
  const numberCovered = tilesWith(goal, player).length;

 
  if (numberCovered === targetNumber) {
    
    level = level + 1;

    const currentLevel = levels[level];

    
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("You Win!", { y: 1, color: color`0` });
    }
  }
});
